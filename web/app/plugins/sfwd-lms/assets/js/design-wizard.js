/*! This file is part of the LearnDash plugin and was generated automatically */
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/src/design-wizard.js":
/*!****************************************!*\
  !*** ./assets/js/src/design-wizard.js ***!
  \****************************************/
/***/ (function() {

eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\njQuery(window).on('load', function () {\n  initPageLoad();\n});\njQuery(function () {\n  /**\n   * Template\n   */\n  jQuery(document).on('mouseover', '.templates .template figure', function (e) {\n    e.preventDefault();\n    jQuery(this).addClass('hover');\n  });\n  jQuery(document).on('mouseleave', '.templates .template figure', function (e) {\n    e.preventDefault();\n    jQuery(this).removeClass('hover');\n  });\n  jQuery(document).on('click', '.templates .template figure .actions .select', function (e) {\n    e.preventDefault();\n    var $templates = jQuery(this).closest('.templates'),\n        templateId = jQuery(this).closest('.template').data('id'),\n        themeTemplateId = jQuery(this).closest('.template').data('theme_template_id');\n    $templates.find('.template').removeClass('selected');\n    jQuery(this).closest('.template').addClass('selected');\n    Cookies.set('ldDwTemplateId', templateId);\n    Cookies.set('ldDwThemeTemplateId', themeTemplateId); // Reset template font and palette selection.\n\n    Cookies.set('ldDwPalette', 'default');\n    Cookies.set('ldDwFont', 'default');\n  });\n  /**\n   * Preview\n   */\n\n  jQuery(document).on('click', '.templates .template figure .actions .preview', function (e) {\n    e.preventDefault();\n    var $preview = jQuery('.preview-wrapper'),\n        $iframeWrapper = $preview.find('.iframe-wrapper'),\n        $template = jQuery(this).closest('.template'),\n        templateId = $template.data('id'),\n        theme = templateId.includes('kadence_') ? 'kadence' : 'astra',\n        previewUrl = $template.data('preview_url');\n\n    if (previewUrl && previewUrl.length > 0) {\n      $preview.find('iframe').attr('src', previewUrl);\n      $preview.show();\n      $iframeWrapper.hide();\n      setTimeout(function () {\n        updatePreview(theme, 'site-colors', 'default');\n        updatePreview(theme, 'site-typography', 'default');\n        $iframeWrapper.show();\n      }, 500);\n    }\n  });\n  jQuery(document).on('click', '.preview-wrapper .close', function (e) {\n    e.preventDefault();\n    var $wrapper = jQuery(this).closest('.preview-wrapper');\n    $wrapper.find('.preview iframe').removeAttr('src');\n    $wrapper.hide();\n  });\n  /**\n   * Font\n   */\n\n  jQuery(document).on('click', '.design-wizard .fonts .font', function (e) {\n    e.preventDefault();\n    var $fonts = jQuery(this).closest('.fonts'),\n        id = jQuery(this).data('id'),\n        template = Cookies.get('ldDwTemplateId'),\n        theme = template.includes('kadence_') ? 'kadence' : 'astra';\n    $fonts.find('.font').removeClass('selected');\n    jQuery(this).addClass('selected');\n    Cookies.set('ldDwFont', id);\n    updatePreview(theme, 'site-typography', id);\n  });\n  jQuery(document).on('click', '.design-wizard .reset-font-button', function (e) {\n    e.preventDefault();\n    var $fonts = jQuery(this).closest('.header').find('.fonts'),\n        template = Cookies.get('ldDwTemplateId'),\n        theme = template.includes('kadence_') ? 'kadence' : 'astra';\n    $fonts.find('.font').removeClass('selected');\n    Cookies.remove('ldDwFont');\n    updatePreview(theme, 'site-typography', 'default');\n  });\n  /**\n   * Palette\n   */\n\n  jQuery(document).on('click', '.design-wizard .palettes .palette', function (e) {\n    e.preventDefault();\n    var $palettes = jQuery(this).closest('.palettes'),\n        id = jQuery(this).data('id'),\n        template = Cookies.get('ldDwTemplateId'),\n        theme = template.includes('kadence_') ? 'kadence' : 'astra';\n    $palettes.find('.palette').removeClass('selected');\n    jQuery(this).addClass('selected');\n    Cookies.set('ldDwPalette', id);\n    updatePreview(theme, 'site-colors', id);\n  });\n  jQuery(document).on('click', '.design-wizard .reset-palette-button', function (e) {\n    e.preventDefault();\n    var $palettes = jQuery(this).closest('.header').find('.palettes'),\n        template = Cookies.get('ldDwTemplateId'),\n        theme = template.includes('kadence_') ? 'kadence' : 'astra';\n    $palettes.find('.palette').removeClass('selected');\n    Cookies.remove('ldDwPalette');\n    updatePreview(theme, 'site-colors', 'default');\n  });\n  /**\n   * Pagination\n   */\n\n  jQuery(document).on('click', '.next-button', function (e) {\n    e.preventDefault();\n    var url = window.location.href,\n        urlParams = new URLSearchParams(window.location.search),\n        template = Cookies.get('ldDwTemplateId');\n    var nonce = false;\n\n    if (!template || template === 'undefined') {\n      alert('Please select a template first');\n      return false;\n    }\n\n    var step = urlParams.get('step');\n    step = step ? parseInt(step) : 1;\n\n    if (step === 1) {\n      // Get Astra theme data\n      if (template.includes('astra_')) {\n        Cookies.set('astra-site-color-scheme', 'light');\n      }\n\n      redirectPage(url, step, template, nonce);\n    } else if (step === 4) {\n      nonce = LearnDashDesignWizard.ajax_init_nonce;\n      jQuery('#ld_dw_confirm').dialog({\n        dialogClass: 'wp-dialog',\n        modal: true,\n        title: 'Ready to Import?',\n        width: 400,\n        buttons: [{\n          text: 'I understand, continue',\n          click: function click() {\n            redirectPage(url, step, template, nonce);\n          }\n        }, {\n          text: 'Exit Setup',\n          click: function click() {\n            window.location.href = LearnDashDesignWizard.learndash_setup_url;\n          }\n        }]\n      });\n    } else {\n      redirectPage(url, step, template, nonce);\n    }\n  });\n  jQuery(document).on('click', '.back', function (e) {\n    e.preventDefault();\n    history.back();\n  });\n  jQuery(document).on('click', '.exit', function (e) {\n    e.preventDefault();\n    window.location.href = LearnDashDesignWizard.learndash_setup_url;\n  });\n  jQuery(document).on('click', '.visit-site', function (e) {\n    e.preventDefault();\n    jQuery('<a href=\"' + LearnDashDesignWizard.site_url + '\" target=\"_blank\"Visit Site</a>')[0].click();\n  });\n});\n/**\n * Build template\n */\n\nfunction initPageLoad() {\n  var urlParams = new URLSearchParams(window.location.search),\n      template = urlParams.get('template'),\n      nonce = urlParams.get('nonce');\n  var step = urlParams.get('step'),\n      theme = '';\n  step = step ? parseInt(step) : 1;\n\n  if (template) {\n    theme = template.includes('kadence_') ? 'kadence' : 'astra';\n  }\n\n  if (step === 1) {\n    Cookies.remove('ldDwTemplateId');\n  } else if (step === 2 || step === 3 || step === 4) {\n    var font = Cookies.get('ldDwFont'),\n        palette = Cookies.get('ldDwPalette');\n    setTimeout(function () {\n      updatePreview(theme, 'site-colors', palette);\n      updatePreview(theme, 'site-typography', font);\n      setTimeout(function () {\n        jQuery('#ld-site-preview').show();\n      }, 1000);\n    }, 500);\n  } else if (step === 5 && template.length > 0 && nonce.length > 0) {\n    Cookies.remove('ldDwLastBuildAstraStep');\n    Cookies.remove('ldDwLastBuildKadenceStep');\n    ajaxBuildTemplate(true);\n  }\n}\n\nfunction ajaxBuildTemplate() {\n  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var urlParams = new URLSearchParams(window.location.search),\n      template = urlParams.get('template'),\n      nonce = urlParams.get('nonce');\n  var currentStepN = 0,\n      totalSteps = 0;\n\n  if (init) {\n    currentStepN = 1; // Remove wizard cookies set by the previous wizard process.\n\n    flushCookies();\n    totalSteps = 6;\n\n    if (template.includes('astra')) {\n      totalSteps = parseInt(totalSteps) + 35;\n    } else if (template.includes('kadence')) {\n      totalSteps = parseInt(totalSteps) + 9;\n    }\n\n    Cookies.set('ldDwTotalSteps', totalSteps);\n  } else {\n    currentStepN = Cookies.get('ldDwCurrentStepN');\n    currentStepN = parseInt(currentStepN) + 1;\n    totalSteps = Cookies.get('ldDwTotalSteps');\n  }\n\n  Cookies.set('ldDwCurrentStepN', currentStepN);\n  jQuery.post(LearnDashDesignWizard.ajaxurl, {\n    action: 'ld_dw_build_template',\n    nonce: nonce,\n    template: template,\n    init: init\n  }, function (response) {\n    if (response.success) {\n      if (!response.data.complete) {\n        if (response.data.step !== 'build_template') {\n          ajaxBuildTemplate();\n        } else if (response.data.step === 'build_template') {\n          if (response.data.theme === 'astra') {\n            ajaxBuildAstra();\n          } else if (response.data.theme === 'kadence') {\n            ajaxBuildKadence();\n          }\n        }\n      } else {\n        currentStepN = 1;\n        totalSteps = 1;\n        flushCookies(true); // Add process complete handler.\n\n        var actionsTemplate = LearnDashDesignWizard.templates.actions_success;\n        jQuery('.design-wizard > .content > .text').replaceWith(actionsTemplate);\n      }\n\n      updateProgress({\n        currentStepN: currentStepN,\n        totalSteps: totalSteps,\n        message: response.data.message\n      });\n    }\n  });\n}\n\nfunction ajaxBuildAstra() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'POST';\n  var urlParams = new URLSearchParams(window.location.search),\n      font = Cookies.get('ldDwFont'),\n      palette = Cookies.get('ldDwPalette'),\n      fontDetails = JSON.stringify(getFontDetails('astra', font)),\n      colorScheme = Cookies.get('astra-site-color-scheme');\n  var paletteDetails,\n      step = urlParams.get('step');\n\n  if (colorScheme) {\n    paletteDetails = JSON.stringify(getPaletteDetails('astra', palette, colorScheme));\n  }\n\n  if (url.length < 1) {\n    url = LearnDashDesignWizard.ajaxurl;\n  }\n\n  var actions = ['astra-sites-api-request', 'astra-required-plugins', 'astra-sites-filesystem-permission', 'astra-sites-set-start-flag', 'astra-sites-reset-customizer-data', 'astra-sites-reset-site-options', 'astra-sites-reset-widgets-data', 'astra-sites-reset-terms-and-forms', 'astra-sites-get-deleted-post-ids', 'astra-sites-reset-posts', // 10 posts per batch\n  'astra-sites-import-wpforms', 'astra-sites-import-cartflows', 'astra-sites-import-customizer-settings', 'astra-sites-import-prepare-xml', 'astra-wxr-import', 'astra-sites-import-options', 'astra-sites-import-widgets', 'astra_sites_set_site_data-site_colors', // param: site-colors\n  'astra_sites_set_site_data-site_typography', // param: site-typography\n  'astra-sites-import-end'];\n  var templateId = Cookies.get('ldDwThemeTemplateId'),\n      lastStep = Cookies.get('ldDwLastBuildAstraStep'),\n      totalSteps = Cookies.get('ldDwTotalSteps');\n  var lastStepKey, currentStepKey;\n  var currentStepN = Cookies.get('ldDwCurrentStepN'),\n      message = '';\n  currentStepN = parseInt(currentStepN) + 1;\n  Cookies.set('ldDwCurrentStepN', currentStepN);\n\n  if (!lastStep) {\n    currentStepKey = 0;\n  } else {\n    lastStepKey = actions.indexOf(lastStep);\n    currentStepKey = lastStepKey + 1;\n  }\n\n  var currentStep = actions[currentStepKey];\n\n  if (currentStep) {\n    var postIds, deletedPostIds, astraSiteResetPosts;\n    step = currentStep;\n\n    switch (currentStep) {\n      case 'astra-sites-api-request':\n        data.url = 'astra-sites/' + templateId;\n        message = 'Get template data';\n        break;\n\n      case 'astra-sites-reset-customizer-data':\n        message = 'Reset site data';\n        break;\n\n      case 'astra-sites-reset-posts':\n        postIds = Cookies.get('astra-site-deleted-post-ids');\n\n        if (postIds !== 'undefined') {\n          postIds = postIds.split(',');\n          deletedPostIds = postIds.splice(0, 10);\n        } else {\n          deletedPostIds = [];\n        }\n\n        data.ids = Object.assign({}, deletedPostIds);\n        data.ids = JSON.stringify(data.ids);\n\n        if (postIds !== 'undefined' && postIds.length > 0) {\n          astraSiteResetPosts = true;\n        } else {\n          astraSiteResetPosts = false;\n        }\n\n        break;\n\n      case 'astra-sites-import-wpforms':\n        data.wpforms_url = Cookies.get('astra-site-wpforms-path');\n        Cookies.remove('astra-site-wpforms-path');\n        message = 'Import wpforms data if any';\n        break;\n\n      case 'astra-sites-import-cartflows':\n        data.cartflows_url = Cookies.get('astra-site-cartflows-path');\n        Cookies.remove('astra-site-cartflows-path');\n        message = 'Import cartflows data if any';\n        break;\n\n      case 'astra-sites-import-widgets':\n        data.widgets_data = Cookies.get('astra-site-widgets-data');\n        Cookies.remove('astra-site-widgets-data');\n        message = 'Import widgets data';\n        break;\n\n      case 'astra-sites-import-prepare-xml':\n        data.wxr_url = Cookies.get('astra-site-wxr-path');\n        Cookies.remove('astra-site-wxr-path');\n        message = 'Import XML data';\n        break;\n\n      case 'astra_sites_set_site_data-site_colors':\n        step = 'astra_sites_set_site_data';\n        data.param = 'site-colors';\n        data.palette = paletteDetails;\n        data.security = LearnDashDesignWizard.ajax_set_data_nonce;\n        Cookies.remove('astra-site-color-scheme');\n        message = 'Apply site color options';\n        break;\n\n      case 'astra_sites_set_site_data-site_typography':\n        step = 'astra_sites_set_site_data';\n        data.param = 'site-typography';\n        data.typography = fontDetails;\n        data.security = LearnDashDesignWizard.ajax_set_data_nonce;\n        message = 'Apply site typography options';\n        break;\n    }\n\n    updateProgress({\n      currentStepN: currentStepN,\n      totalSteps: totalSteps,\n      message: message\n    });\n    jQuery.ajax({\n      url: url,\n      type: type,\n      data: _objectSpread({\n        action: step,\n        _ajax_nonce: LearnDashDesignWizard.ajax_nonce\n      }, data),\n      success: function success(response) {\n        if (currentStep === 'astra-wxr-import') {\n          if (response.length > 0) {\n            ajaxBuildAstra();\n          }\n        } else if ('astra-wxr-import' !== currentStep) {\n          if (response.success) {\n            var ajaxData = {};\n            var ajaxUrl = '',\n                ajaxType = 'POST',\n                storedDeletedPostIds;\n\n            switch (currentStep) {\n              case 'astra-sites-api-request':\n                Cookies.set('astra-site-wpforms-path', response.data['astra-site-wpforms-path']);\n                Cookies.set('astra-site-cartflows-path', response.data['astra-site-cartflows-path']);\n                Cookies.set('astra-site-wxr-path', response.data['astra-site-wxr-path']);\n                Cookies.set('astra-site-widgets-data', response.data['astra-site-widgets-data']);\n                break;\n\n              case 'astra-required-plugins':\n                Cookies.set('astra-site-required-plugins', response.data.required_plugins);\n                response.data.required_plugins.notinstalled.forEach(function (plugin) {\n                  wp.updates.queue.push({\n                    action: 'install-plugin',\n                    data: {\n                      slug: plugin.slug,\n                      init: plugin.init,\n                      name: plugin.name,\n                      clear_destination: true,\n                      success: function success() {\n                        activatePlugin(plugin);\n                      },\n                      error: function error() {}\n                    }\n                  });\n                }); // Required to set queue.\n\n                wp.updates.queueChecker();\n                response.data.required_plugins.inactive.forEach(function (plugin) {\n                  activatePlugin(plugin);\n                });\n                break;\n\n              case 'astra-sites-get-deleted-post-ids':\n                storedDeletedPostIds = response.data.splice(0, 100);\n                Cookies.set('astra-site-deleted-post-ids', storedDeletedPostIds);\n                break;\n\n              case 'astra-sites-import-prepare-xml':\n                ajaxUrl = response.data.url;\n                ajaxType = 'GET';\n                break;\n\n              case 'astra-sites-import-end':\n                Cookies.remove('ldDwLastBuildAstraStep');\n                ajaxBuildTemplate();\n                return;\n            }\n\n            ajaxBuildAstra(ajaxUrl, ajaxData, ajaxType);\n          } else {\n            // Add error handler.\n            if (Object.hasOwnProperty.call(response, 'data') && Object.hasOwnProperty.call(response.data, 'message')) {\n              message = response.data.message;\n            } else {\n              message = LearnDashDesignWizard.messages.dw_error_default;\n            }\n\n            message = LearnDashDesignWizard.messages.dw_error_prefix + ': ' + message;\n            updateProgress({\n              currentStepN: currentStepN - 1,\n              totalSteps: totalSteps,\n              message: message\n            });\n            var actionsTemplate = LearnDashDesignWizard.templates.actions_error;\n            jQuery('.design-wizard > .content > .text').replaceWith(actionsTemplate);\n            Cookies.remove('ldDwLastBuildAstraStep');\n          }\n        }\n\n        currentStepN = parseInt(currentStepN) + 1;\n        Cookies.set('ldDwCurrentStepN', currentStepN);\n      }\n    }).fail(function () {\n      Cookies.remove('ldDwLastBuildAstraStep');\n      Cookies.remove('ldDwCurrentStepN');\n    });\n\n    if (astraSiteResetPosts) {\n      // Step before get-deleted-post-ids\n      Cookies.set('ldDwLastBuildAstraStep', 'astra-sites-reset-terms-and-forms');\n    } else {\n      Cookies.set('ldDwLastBuildAstraStep', currentStep);\n    }\n  } else {\n    Cookies.remove('ldDwLastBuildAstraStep');\n  }\n}\n\nfunction ajaxBuildKadence() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'POST';\n  var urlParams = new URLSearchParams(window.location.search);\n  var step = urlParams.get('step');\n\n  if (url.length < 1) {\n    url = LearnDashDesignWizard.ajaxurl;\n  }\n\n  var actions = ['kadence_import_get_template_data', 'kadence_check_plugin_data', 'kadence_remove_past_import_data', 'kadence_import_install_plugins', 'kadence_import_demo_data', 'kadence_import_customizer_data', 'kadence_after_import_data'];\n  var templateId = Cookies.get('ldDwThemeTemplateId'),\n      lastStep = Cookies.get('ldDwLastBuildKadenceStep'),\n      totalSteps = Cookies.get('ldDwTotalSteps');\n  var lastStepKey, currentStepKey, kadenceImportDemo;\n  var currentStepN = Cookies.get('ldDwCurrentStepN'),\n      message = '';\n  currentStepN = parseInt(currentStepN) + 1;\n  Cookies.set('ldDwCurrentStepN', currentStepN);\n\n  if (!lastStep) {\n    currentStepKey = 0;\n  } else {\n    lastStepKey = actions.indexOf(lastStep);\n    currentStepKey = lastStepKey + 1;\n  }\n\n  var currentStep = actions[currentStepKey];\n\n  if (currentStep) {\n    step = currentStep;\n    data.selected = templateId;\n    data.builder = 'blocks';\n\n    switch (currentStep) {\n      case 'kadence_import_get_template_data':\n        data.template_type = 'blocks';\n        message = 'Get template data';\n        break;\n\n      case 'check_plugin_data':\n        data.selected = '';\n        data.builder = 'blocks';\n        message = 'Check plugin data';\n        break;\n\n      case 'kadence_import_demo_data':\n        data.palette = Cookies.get('ldDwPalette');\n        data.font = Cookies.get('ldDwFont');\n        message = 'Import demo data';\n        break;\n\n      case 'kadence_import_customizer_data':\n        data.wp_customize = 'on';\n        delete data.selected;\n        delete data.builder;\n        message = 'Import customizer data';\n        break;\n    }\n\n    updateProgress({\n      currentStepN: currentStepN,\n      totalSteps: totalSteps,\n      message: message\n    });\n\n    if (currentStep) {\n      Cookies.set('ldDwLastBuildKadenceStep', currentStep);\n    }\n\n    jQuery.ajax({\n      url: url,\n      type: type,\n      data: _objectSpread({\n        action: step,\n        security: LearnDashDesignWizard.ajax_kadence_security_nonce\n      }, data),\n      success: function success(response) {\n        var ajaxUrl = '',\n            ajaxData = {},\n            ajaxType = 'POST';\n        var templateData;\n\n        switch (currentStep) {\n          case 'kadence_import_get_template_data':\n            templateData = JSON.parse(response);\n            Cookies.set('ldDwKadenceTemplateData', templateData);\n            break;\n\n          case 'kadence_import_demo_data':\n            kadenceImportDemo = response.status === 'newAJAX';\n\n            if (kadenceImportDemo) {\n              Cookies.set('ldDwLastBuildKadenceStep', 'kadence_import_install_plugins');\n            }\n\n            break;\n\n          case 'kadence_after_import_data':\n            resetKadenceCookies();\n            ajaxBuildTemplate();\n            return;\n        }\n\n        ajaxBuildKadence(ajaxUrl, ajaxData, ajaxType);\n      }\n    }).fail(function () {\n      resetKadenceCookies();\n    });\n  } else {\n    resetKadenceCookies();\n  }\n}\n\nfunction updateProgress(args) {\n  var percentage = args.currentStepN / args.totalSteps * 100;\n  percentage = percentage > 100 ? 100 : percentage;\n  percentage = percentage.toFixed(0);\n  jQuery('.progress .percentage .number').text(percentage + '%');\n  jQuery('.progress .bar progress').attr('value', percentage);\n\n  if (args.message !== '') {\n    jQuery('.progress .status .message').html(args.message);\n  }\n}\n/**\n * Helpers\n */\n\n\nfunction getFontDetails(theme, key) {\n  var details = {};\n\n  if (Object.prototype.hasOwnProperty.call(LearnDashDesignWizard.fonts[theme][key], 'details')) {\n    details = LearnDashDesignWizard.fonts[theme][key].details;\n  }\n\n  return details;\n}\n\nfunction getPaletteDetails(theme, key) {\n  var colorScheme = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var palettes;\n\n  if (colorScheme.length > 0) {\n    palettes = LearnDashDesignWizard.palettes[theme][colorScheme][key];\n  } else {\n    palettes = LearnDashDesignWizard.palettes[theme][key];\n  }\n\n  return palettes;\n}\n\nfunction redirectPage(url, step, template, nonce) {\n  var args = {\n    step: step + 1,\n    template: template,\n    nonce: nonce\n  };\n\n  if (!nonce) {\n    delete args.nonce;\n  }\n\n  var nextUrlParams = new URLSearchParams(args),\n      nextUrl = encodeURI(url + '&' + nextUrlParams.toString());\n  window.location.href = nextUrl;\n}\n\nfunction updatePreview(theme, type) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var frame = document.getElementById('ld-site-preview');\n\n  if (!frame) {\n    return;\n  }\n\n  var astraParam, astraData, kadenceParam, kadenceData, colorScheme;\n  var requestData = {};\n\n  switch (type) {\n    case 'site-colors':\n      if (theme === 'astra') {\n        astraParam = 'colorPalette';\n        colorScheme = Cookies.get('astra-site-color-scheme');\n        colorScheme = colorScheme ? colorScheme : 'light';\n        astraData = getPaletteDetails('astra', key, colorScheme);\n      } else if (theme === 'kadence') {\n        kadenceParam = 'color';\n\n        if (key !== 'default') {\n          kadenceData = Cookies.get('ldDwPalette');\n        } else {\n          kadenceData = '';\n        }\n      }\n\n      break;\n\n    case 'site-typography':\n      if (theme === 'astra') {\n        astraParam = 'siteTypography';\n        astraData = getFontDetails('astra', key);\n        astraData = filterAstraFontDetails(key, astraData);\n      } else if (theme === 'kadence') {\n        kadenceParam = 'font';\n\n        if (key !== 'default') {\n          kadenceData = Cookies.get('ldDwFont');\n        } else {\n          kadenceData = '';\n        }\n      }\n\n      break;\n  }\n\n  if (theme === 'astra') {\n    if (astraParam && astraData) {\n      frame.contentWindow.postMessage({\n        call: 'starterTemplatePreviewDispatch',\n        value: {\n          param: astraParam,\n          data: astraData\n        }\n      }, '*');\n    }\n  } else if (theme === 'kadence') {\n    requestData[kadenceParam] = kadenceData;\n    frame.contentWindow.postMessage(requestData, '*');\n  }\n}\n\nfunction filterAstraFontDetails(key, data) {\n  var id = key; // ID\n\n  data.id = id; // Headings\n\n  var inheritArgs = ['font-family-h1', 'font-family-h2', 'font-family-h3', 'font-family-h4', 'font-family-h5', 'font-family-h6', 'font-weight-h1', 'font-weight-h2', 'font-weight-h3', 'font-weight-h4', 'font-weight-h5', 'font-weight-h6'];\n  var emptyArgs = ['line-height-h1', 'line-height-h2', 'line-height-h3', 'line-height-h4', 'line-height-h5', 'line-height-h6', 'text-transform-h1', 'text-transform-h2', 'text-transform-h3', 'text-transform-h4', 'text-transform-h5', 'text-transform-h6'];\n  inheritArgs.forEach(function (arg) {\n    data[arg] = 'inherit';\n  });\n  emptyArgs.forEach(function (arg) {\n    data[arg] = '';\n  });\n  return data;\n}\n\nfunction activatePlugin(plugin) {\n  jQuery.post(LearnDashDesignWizard.ajaxurl, {\n    action: 'astra-required-plugin-activate',\n    _ajax_nonce: LearnDashDesignWizard.ajax_nonce,\n    init: plugin.init\n  }, function () {});\n}\n\nfunction flushCookies() {\n  var end = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var cookies = ['ldDwCurrentStepN', 'ldDwTotalSteps', 'ldDwLastBuildAstraStep', 'ldDwLastBuildKadenceStep', 'astra-site-wpforms-path', 'astra-site-cartflows-path', 'astra-site-wxr-path', 'astra-site-widgets-data', 'astra-site-required-plugins'];\n\n  if (end) {\n    cookies.push.apply(cookies, ['astra-site-color-scheme', 'ldDwTemplateId', 'ldDwThemeTemplateId', 'ldDwFont', 'ldDwPalette']);\n  }\n\n  cookies.forEach(function (cookie) {\n    Cookies.remove(cookie);\n  });\n}\n\nfunction resetKadenceCookies() {\n  var cookies = ['ldDwLastBuildKadenceStep', 'ldDwPalette', 'ldDwFont'];\n  cookies.forEach(function (cookie) {\n    Cookies.remove(cookie);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/src/design-wizard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/js/src/design-wizard.js"]();
/******/ 	
/******/ })()
;